Класс ThreadPoolService:
Веб-метод GetRId принимает на вход строку - число, факториал которого нужно найти. Возвращает идентификатор сохраненного запроса.
Веб-метод Status - принимает на вход число - идентификатор запроса, статус которого нужно получить. Возвращает строку - статус запроса.
Веб-метод Result - принимает на вход число - идентификатор запроса. Возвращает результат выполнения запроса.
Веб-метод GetFullRequest- принимает на вход число - идентификатор запроса. Возвращает объект типа Request, ханящий запрос и результат его обработки.
Веб-метод GetProcTaskData - принимает на вход число - идентификатор запроса. Возвращает строку - число рабочих процессов и число запросов в глобальной очереди, разделенные запятой.
 
Класс Request:
Запрос GetWaiting - возвращает все запросы со статусом "WAITING"(ожидающие обработки)

Класс ThreadPool:
Метод класса Start запускает обработку запросов.
Метод класса Stop останавливает обработку запросов.
Метод класса SetReaction(N) устанавливает реакцию на добавление запроса
N = 1 - обработать запрос сразу при поступоении
N = 2 - сохранить запрос и оставить на обработку обрабатывающему приложению
N = 3 - сохранить запрос
Метод класса SetMethod(N) устанавливает метод обработки обрабатывающего приложения.
N = 1 - обработка всех запросов в одном процессу 
N = 2 - обработка каждого запроса в отдельном процессе
N = 3 - обработка с использованием блокируемой глобальной очереди.
Метод класса Initialize устанавливает служебные переменные в исходное значение. 
Метод класса SetThreadsNum устанавливает количество рабочих процессов для метода с блокируемой глобальной очередью.
Метод класса SetDynamicThreadManaging устанавливает разрешение на динамическое управление созданием и уничтожением рабочих процессов.
Метод класса SetMaximumThreadsNum устанавливает максимальное количество рабочих процессов для динамического управления процессами.
Метод класса SetMinimumThreadsNum устанавливает минимальное количество рабочих процессов для динамического управления процессами.
Метод класса SetDynamicThreadLifeTime устанавливает время жизни рабочего процесса при отсутствии задач в очереди.
Метод класса JobsStart - вызывается как job из метода Start для создания отдельных процессов для метода 2. 

Класс Handler:
Метод класса JobManaging - метод управления созданием рабочих процессов при динамическом управлении.
Метод класса JobStack процедура рабочего процесса для метода обработки блокируемой глобальной очередью.
Метод класса WaitTask - метод ожидания и получения идентификатора запроса из глобальной очереди.
Метод класса StackMansge управляет глобальной очередью с идентификаторами.
Метод класса JobForEach процедура  рабочего процесса для метода обработки каждого запроса в отдельном процессе.
Метод класса JobForAll процедура  рабочего процесса для метода обработки всех запросов в одном процессе.